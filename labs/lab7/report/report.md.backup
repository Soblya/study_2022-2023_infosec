---
## Front matter
title: "Отчёт по лабораторной работе 7"
subtitle: ""
author: "Соболев Максим Сергеевич"

## Generic otions
lang: ru-RU
toc-title: "Содержание"

## Bibliography
bibliography: bib/cite.bib
csl: pandoc/csl/gost-r-7-0-5-2008-numeric.csl

## Pdf output format
toc: true # Table of contents
toc-depth: 2
lof: true # List of figures
lot: false # List of tables
fontsize: 12pt
linestretch: 1.5
papersize: a4
documentclass: scrreprt
## I18n polyglossia
polyglossia-lang:
  name: russian
  options:
	- spelling=modern
	- babelshorthands=true
polyglossia-otherlangs:
  name: english
## I18n babel
babel-lang: russian
babel-otherlangs: english
## Fonts
mainfont: PT Serif
romanfont: PT Serif
sansfont: PT Sans
monofont: PT Mono
mainfontoptions: Ligatures=TeX
romanfontoptions: Ligatures=TeX
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase
monofontoptions: Scale=MatchLowercase
## Biblatex
biblatex: true
biblio-style: "gost-numeric"
biblatexoptions:
  - parentracker=true
  - backend=biber
  - hyperref=auto
  - language=auto
  - autolang=other*
  - citestyle=gost-numeric
## Pandoc-crossref LaTeX customization
figureTitle: "Рис."
tableTitle: "Таблица"
listingTitle: "Листинг"
lofTitle: "Список иллюстраций"
lotTitle: "Список таблиц"
lolTitle: "Листинги"
## Misc options
indent: true
header-includes:
  - \usepackage{indentfirst}
  - \usepackage{float} # keep figures where there are in the text
  - \usepackage{pdflscape}
  - \floatplacement{figure}{H} # keep figures where there are in the text
---

***
# Элементы криптографии. Однократное гаммирование

# Цель работы

Освоить на практике применение режима однократного гаммирования

# Задание

Определить вид шифротекста при известном ключе и известном открытом тексте.
Определить ключ, с помощью которого шифротекст может быть преобразован в некоторый фрагмент текста, представляющий собой один из возможных вариантов прочтения открытого текста.

# Теоретическое введение

Гамми́рование, или Шифр XOR, — метод симметричного шифрования, заключающийся в «наложении» последовательности, состоящей из случайных чисел, на открытый текст. Последовательность случайных чисел называется гамма-последовательностью и используется для зашифровывания и расшифровывания данных.

***
# Выполнение лабораторной работы

## Шаг 1

```csharp
using System.Text;

Encoding.RegisterProvider(CodePagesEncodingProvider.Instance);
Console.OutputEncoding = Encoding.GetEncoding(1251);
Console.InputEncoding = Encoding.GetEncoding(1251);

Console.WriteLine("Введите 1 для шифрования текста");
Console.WriteLine("Введите 2 для определения ключа");
var mode = Console.ReadLine();


Console.WriteLine(
$"В каком формате будет представлен {(mode == "1" ? "ключ шифрования" : "шифротекст")}? Нажмите 1 если в шеснадцатеричном, нажмите 2 если открытым текстом");
var keyForm = Console.ReadLine();

Console.WriteLine($"Введите {(mode == "1" ? "ключ шифрования" : "шифротекст")}");
var cypherText = ReadUserInput(keyForm);


Console.WriteLine(
"В каком формате будет представлено сообщение? Нажмите 1 если в шеснадцатеричном, нажмите 2 если открытым текстом");
var textForm = Console.ReadLine();

Console.WriteLine("Введите сообщение");
var plainText = ReadUserInput(textForm);


Console.WriteLine(DeriveKey(cypherText, plainText));

string DeriveKey(string cypherText, string plainText)
{
var result = string.Empty;
for (var i = 0; i < cypherText.Length; i += 2)
{
var cypherByte = Convert.ToInt32(cypherText.Substring(i, 2), 16);
var plainByte = Convert.ToInt32(plainText.Substring(i, 2), 16);

        result += (cypherByte ^ plainByte).ToString("X");
    }
        
    return result;
}

string ReadUserInput(string? s)
{
return s == "1"
? Console.ReadLine() ?? throw new InvalidOperationException()
: string.Concat(Encoding.GetEncoding(1251)
.GetBytes(Console.ReadLine() ?? throw new InvalidOperationException()).Select(b => b.ToString("X2")));
}

````

## Шаг 2

Шифрование

![1](image/1.png){ #fig:001 width=70% }

## Шаг 3

Дешифрование

![2](image/2.png){ #fig:002 width=70% }

# Выводы

В итоге мы освоили на практике применение режим однократного гаммирования

# Список литературы{.unnumbered}

1. xattr(7) — Linux manual page // Linux man-pages project URL: https://man7.org/linux/man-pages/man7/xattr.7.html (дата обращения: 30.09.2022). 